<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://ondex.sourceforge.net/" xmlns:xs="http://www.w3.org/2001/XMLSchema"
      targetNamespace="http://ondex.sourceforge.net/" elementFormDefault="qualified"
      attributeFormDefault="unqualified">
      <xs:annotation>
            <xs:documentation xml:lang="en">This XML Schema Document describes the ONDEX concepts, relations and ONDEX meta data. Used design: "venetian blind". Author: Klaus Peter Sieren. It is the basis for ONDEX data exchange (import, export and queries).</xs:documentation>
      </xs:annotation>
      <!-- MetaData abstract class -->
      <xs:complexType name="MetaDataType" abstract="true">
            <xs:annotation>
                  <xs:documentation xml:lang="en"> Abstract data type for meta data, see abstract java class MetaData,name, normally short name (private String name) description, longer description (private String description)
			</xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="id" type="xs:string"/>
                  <xs:element name="fullname" type="xs:string"/>
                  <xs:element name="description" type="xs:string"/>
            </xs:sequence>
      </xs:complexType>
      <!-- GDS abstract class -->
      <xs:complexType name="GDSType" abstract="true">
            <xs:annotation>
                  <xs:documentation xml:lang="en"> Abstract data type,	see abstract java class GDS (Generalized Datastructure), attrname, the attribute name for this GDS (private AttributeName attrname), value, the attribute value for this GDS (private Object value)
			</xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="attrname" type="AttributeNameType"/>
                  <xs:element name="value" type="xs:string"/>
                  <!--in value only CDATA allowed written with java API-->
                  <xs:element name="doindex" type="xs:boolean"/>
            </xs:sequence>
      </xs:complexType>
      <!-- Unit class -->
      <xs:complexType name="UnitType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Data type for Units, derived from MetaDataType, see java class Unit</xs:documentation>
            </xs:annotation>
            <xs:complexContent>
                  <xs:extension base="MetaDataType"/>
            </xs:complexContent>
      </xs:complexType>
      <!-- AttributName class -->
      <xs:complexType name="AttributeNameType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Data type for Attribute names, derived from MetaDataType, see java class AttributeName,	private Unit unit, private Class datatype, private AttributeName specialisationOf</xs:documentation>
            </xs:annotation>
            <xs:complexContent>
                  <xs:extension base="MetaDataType">
                        <xs:sequence>
                              <xs:element name="unit" type="UnitType" minOccurs="0"/>
                              <!--Unit is optional-->
                              <xs:element name="datatype" type="xs:string"/>
                              <xs:element name="specialisationOf" type="AttributeNameType"
                                    minOccurs="0" maxOccurs="1"/>
                        </xs:sequence>
                  </xs:extension>
                  <!-- contains abstract MetaDataType-->
            </xs:complexContent>
      </xs:complexType>
      <!-- Concept class -->
      <xs:complexType name="ConceptType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Datatype for ONDEX Concepts
                  </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="id" type="xs:integer"/>
                  <xs:element name="pid" type="xs:string"/>
                  <xs:element name="annotation" type="xs:string"/>
                  <xs:element name="description" type="xs:string"/>
                  <xs:element name="elementOf" type="CVType"/>
                  <xs:element name="ofType" type="ConceptClassType"/>
                  <xs:element name="evidences" type="EvidenceSeqType"/>
                  <!--// hashtable for ConceptNames with name as index
					private Hashtable<String,ConceptName> conames-->
                  <xs:element name="conames" type="ConceptNameSeqType"/>
                  <!--hashtable for ConceptAccessions with accession and CV name as index
					private Hashtable<String,Hashtable<CV,ConceptAccession>> coaccessions;-->
                  <xs:element name="coaccessions" type="ConceptAccessionSeqType"/>
                  <!--// concept gds associated with this concept
					private Hashtable<AttributeName,ConceptGDS> cogds;-->
                  <xs:element name="cogds" type="ConceptGDSSeqType"/>
                  <!-- a concept can have optional context -->
                  <xs:element name="contexts" type="ContextSeqType" maxOccurs="1" minOccurs="0"/>
            </xs:sequence>
      </xs:complexType>
      <!-- Concept list type -->
      <xs:complexType name="ConceptSeqType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">A Sequence of  ONDEX Concepts
                  </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="concept" type="ConceptType" minOccurs="0" maxOccurs="unbounded"
                  />
            </xs:sequence>
      </xs:complexType>
      <!-- ConceptAccession class -->
      <xs:complexType name="ConceptAccessionType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Datatype for ONDEX Concept Accession
                  </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="accession" type="xs:string"/>
                  <xs:element name="elementOf" type="CVType"/>
                  <xs:element name="ambiguous" type="xs:boolean"/>
            </xs:sequence>
      </xs:complexType>
      <!-- ConceptAccession list type -->
      <xs:complexType name="ConceptAccessionSeqType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Sequence of ONDEX Concepts Accessions
                  </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="concept_accession" type="ConceptAccessionType" minOccurs="0"
                        maxOccurs="unbounded"/>
            </xs:sequence>
      </xs:complexType>
      <!-- ConceptClass class -->
      <xs:complexType name="ConceptClassType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Datatype for ONDEX ConceptClass
                  </xs:documentation>
            </xs:annotation>
            <xs:complexContent>
                  <xs:extension base="MetaDataType">
                        <xs:sequence>
                              <xs:element name="specialisationOf" type="ConceptClassType"
                                    minOccurs="0" maxOccurs="1"/>
                        </xs:sequence>
                  </xs:extension>
            </xs:complexContent>
      </xs:complexType>
      <!-- ConceptGDS class -->
      <xs:complexType name="ConceptGDSType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Datatype for ONDEX Concept Generalized Data Structure(GDS)
                  </xs:documentation>
            </xs:annotation>
            <xs:complexContent>
                  <xs:extension base="GDSType"/>
            </xs:complexContent>
      </xs:complexType>
      <!-- ConceptGDS list type -->
      <xs:complexType name="ConceptGDSSeqType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Sequence of ONDEX ConceptGDS types.
                  </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="concept_gds" type="ConceptGDSType" minOccurs="0"
                        maxOccurs="unbounded"/>
            </xs:sequence>
      </xs:complexType>
      <!-- ConceptName class -->
      <xs:complexType name="ConceptNameType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Datatype for ONDEX Concept Names
                  </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="name" type="xs:string"/>
                  <xs:element name="isPreferred" type="xs:boolean"/>
            </xs:sequence>
      </xs:complexType>
      <!-- ConceptName list type -->
      <xs:complexType name="ConceptNameSeqType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Sequence of ONDEX ConceptNames
                  </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="concept_name" type="ConceptNameType" minOccurs="0"
                        maxOccurs="unbounded"/>
            </xs:sequence>
      </xs:complexType>
      <!-- CV class -->
      <xs:complexType name="CVType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Datatype for ONDEX Control Vocabulary (CV)
                  </xs:documentation>
            </xs:annotation>
            <xs:complexContent>
                  <xs:extension base="MetaDataType"/>
            </xs:complexContent>
      </xs:complexType>
      <!-- EvidenceType class -->
      <xs:complexType name="EvidenceType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Datatype for ONDEX Relation Evidences
                  </xs:documentation>
            </xs:annotation>
            <xs:complexContent>
                  <xs:extension base="MetaDataType"/>
            </xs:complexContent>
      </xs:complexType>
      <!-- EvidenceType list type -->
      <xs:complexType name="EvidenceSeqType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Sequence of ONDEX Relation Evidences
                  </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="evidence" type="EvidenceType" maxOccurs="unbounded"/>
            </xs:sequence>
      </xs:complexType>
      <!-- RelationGDS class -->
      <xs:complexType name="RelationGDSType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Datatype for ONDEX Relation Generalized Data Structures (GDS)
                  </xs:documentation>
            </xs:annotation>
            <xs:complexContent>
                  <xs:extension base="GDSType"/>
            </xs:complexContent>
      </xs:complexType>
      <!-- RelationGDS list type -->
      <xs:complexType name="RelationGDSSeqType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Sequence of ONDEX relation GDSs
                  </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="relation_gds" type="RelationGDSType" minOccurs="0"
                        maxOccurs="unbounded"/>
            </xs:sequence>
      </xs:complexType>
      <!-- Relation class -->
      <xs:complexType name="RelationType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Datatype for ONDEX Relations
                  </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="fromConcept" type="xs:integer"/>
                  <xs:element name="toConcept" type="xs:integer"/>
                  <xs:element name="qualifier" type="xs:integer" minOccurs="0"/>
                  <!--qualifier trinary Relation-->
                  <xs:element name="ofType" type="RelationTypeType"/>
                  <xs:element name="evidences" type="EvidenceSeqType"/>
                  <xs:element name="relgds" type="RelationGDSSeqType"/>
                  <!-- a relation can have optional context -->
                  <xs:element name="contexts" type="ContextSeqType" minOccurs="0"/>
            </xs:sequence>
      </xs:complexType>
      <!-- Relation list type -->
      <xs:complexType name="RelationSeqType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Sequence of ONDEX Relations
                  </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="relation" type="RelationType" minOccurs="0"
                        maxOccurs="unbounded"/>
            </xs:sequence>
      </xs:complexType>
      <!-- RelationType class -->
      <xs:complexType name="RelationTypeType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Describes a RelationType, specialisationOf is optional.
                  </xs:documentation>
            </xs:annotation>
            <xs:complexContent>
                  <xs:extension base="MetaDataType">
                        <xs:sequence>
                              <xs:element name="inverseName" type="xs:string"/>
                              <xs:element name="isAntisymmetric" type="xs:boolean"/>
                              <xs:element name="isReflexive" type="xs:boolean"/>
                              <xs:element name="isSymmetric" type="xs:boolean"/>
                              <xs:element name="isTransitive" type="xs:boolean"/>
                              <xs:element name="specialisationOf" type="RelationTypeType"
                                    minOccurs="0" maxOccurs="1"/>
                        </xs:sequence>
                  </xs:extension>
            </xs:complexContent>
      </xs:complexType>
      <!-- RelationType list type (used in meta data) -->
      <xs:complexType name="RelationTypeSeqType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">List of RelationTypes, used in RelationTypeSet for saving all RelationTypes, which belong to a RelationTypeSet. Every RelationTypeSet has at least one RelationType.
                  </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="relation_type" type="RelationTypeType" maxOccurs="unbounded"/>
            </xs:sequence>
      </xs:complexType>
      <!--
end ONDEX data types, the follwing types are meta data sequence definitions
      -->
      <!-- CV Sequence type -->
      <xs:complexType name="CVSeqType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">A Sequence of ONDEX CVs.</xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="cv" type="CVType" maxOccurs="unbounded"/>
            </xs:sequence>
      </xs:complexType>
      <!-- Unit Sequence type -->
      <xs:complexType name="UnitSeqType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">A Sequence of ONDEX Units.</xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="unit" type="UnitType" maxOccurs="unbounded"/>
            </xs:sequence>
      </xs:complexType>
      <!-- AttributeName Sequence type -->
      <xs:complexType name="AttributeNameSeqType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">A Sequence of ONDEX AttributeNames.</xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="attrname" type="AttributeNameType" maxOccurs="unbounded"/>
            </xs:sequence>
      </xs:complexType>
      <!-- ConceptClass Sequence type -->
      <xs:complexType name="ConceptClassSeqType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">A Sequence of ONDEX ConceptClasses.</xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="cc" type="ConceptClassType" maxOccurs="unbounded"/>
            </xs:sequence>
      </xs:complexType>
      <!-- 
end ONDEX meta data types 
      -->
      <!-- Sequence of MetaData -->
      <xs:complexType name="OndexMetaDataSeqType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Datatype for ONDEX MetaData.</xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="cvs" type="CVSeqType" minOccurs="0"/>
                  <xs:element name="units" type="UnitSeqType" minOccurs="0"/>
                  <xs:element name="attrnames" type="AttributeNameSeqType" minOccurs="0"/>
                  <xs:element name="evidences" type="EvidenceSeqType" minOccurs="0"/>
                  <xs:element name="conceptclasses" type="ConceptClassSeqType" minOccurs="0"/>
                  <xs:element name="relationtypes" type="RelationTypeSeqType" minOccurs="0"/>
            </xs:sequence>
      </xs:complexType>
      <!--
ONDEX data list type
      -->
      <xs:complexType name="OndexDataSeqType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">Datatype for ONDEX Relations and Concepts
                  </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="concepts" type="ConceptSeqType"/>
                  <xs:element name="relations" type="RelationSeqType"/>
            </xs:sequence>
      </xs:complexType>
      <!--
ONDEX data type
      -->
      <xs:complexType name="OndexType">
            <xs:annotation>
                  <xs:documentation xml:lang="en">A OndexDataType contains pure ondex data (relations and concepts)  in a ondexdataseq Datatype or ondex meta data. 
                  </xs:documentation>
            </xs:annotation>
            <xs:sequence>
                  <xs:element name="version" type="xs:float"/>
                  <xs:element name="ondexdataseq" type="OndexDataSeqType" minOccurs="0"/>
                  <xs:element name="ondexmetadata" type="OndexMetaDataSeqType" minOccurs="0"/>
            </xs:sequence>
      </xs:complexType>
      <xs:element name="ondex" type="OndexType"/>

      <xs:complexType name="ContextSeqType">
            <xs:sequence>
                  <xs:element name="context" type="ContextType" maxOccurs="unbounded" minOccurs="0"
                  />
            </xs:sequence>
      </xs:complexType>

      <xs:complexType name="ContextType">
            <xs:sequence>
                  <xs:element name="id" type="xs:integer"/>
            </xs:sequence>
      </xs:complexType>
</xs:schema>
